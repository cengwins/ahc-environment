---
openapi: 3.0.0
info:
  title: AHC
  description: API provided by AHC backend
  version: 0.0.1
servers:
- url: https://virtserver.swaggerhub.com/koluacik/AHC/0.0.1
  description: SwaggerHub API Auto Mocking
tags:
- name: auth
  description: User authenticate, register, login, and user info.
paths:
  /auth/login:
    post:
      tags:
      - auth
      summary: Login with given credentials.
      operationId: userLogin
      requestBody:
        description: Login Info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
            examples:
              LoginExample:
                $ref: '#/components/examples/UserLogin'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
              examples:
                TokenExample:
                  $ref: '#/components/examples/Token'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingFieldError'
  /auth/register:
    post:
      tags:
      - auth
      summary: Register new user
      operationId: userRegister
      requestBody:
        description: Registration info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegiterInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegiterInfo'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /auth/profile:
    get:
      tags:
      - auth
      summary: Show current user info
      operationId: getUserInfo
      responses:
        "200":
          description: User info displayed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      security:
      - IsAuthenticated: []
components:
  schemas:
    UserRegiterInfo:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        first_name:
          type: string
        password:
          type: string
          format: password
    UserLogin:
      type: object
      properties:
        username:
          type: string
          description: Can be username or email
        password:
          type: string
          format: string
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        profile_image:
          type: string
          format: uri
          nullable: true
    MissingFieldError:
      type: object
      properties:
        code:
          type: string
          enum:
          - missing_field
        field:
          type: string
          enum:
          - username
          - email
          - first_name
          - last_name
          - password
    AlreadyExistsError:
      type: object
      properties:
        code:
          type: string
          enum:
          - missing_field
        field:
          type: string
          enum:
          - username_exists
          - email_exists
    Token:
      type: object
      properties:
        token:
          type: string
    inline_response_403:
      type: object
      properties:
        code:
          type: string
          enum:
          - wrong_passwd
    inline_response_400:
      oneOf:
      - $ref: '#/components/schemas/AlreadyExistsError'
      - $ref: '#/components/schemas/MissingFieldError'
  responses:
    BadRequestMissingField:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MissingFieldError'
    BadRequestMissingOrExisting:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
    Unauthorized:
      description: Unathorized
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                enum:
                - Authentication credentials were not provided.
  examples:
    Token:
      summary: Token example
      value:
        token: 02da068f21c282147adee6009e9766fccc3924cb
    UserLogin:
      summary: Login example
      value:
        username: admin
        password: strongpassword!
  securitySchemes:
    IsAuthenticated:
      type: http
      scheme: bearer
